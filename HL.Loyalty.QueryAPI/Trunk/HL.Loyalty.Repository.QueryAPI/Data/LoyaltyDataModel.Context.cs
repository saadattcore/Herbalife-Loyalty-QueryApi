//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HL.Loyalty.Repository.QueryAPI.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LoyaltyEntities : DbContext
    {
        public LoyaltyEntities()
            : base("name=LoyaltyEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<Nullable<bool>> usp_ValidateCustomerOLC(string distributorID, string email, Nullable<System.DateTime> currentDate)
        {
            var distributorIDParameter = distributorID != null ?
                new ObjectParameter("DistributorID", distributorID) :
                new ObjectParameter("DistributorID", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var currentDateParameter = currentDate.HasValue ?
                new ObjectParameter("CurrentDate", currentDate) :
                new ObjectParameter("CurrentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("usp_ValidateCustomerOLC", distributorIDParameter, emailParameter, currentDateParameter);
        }
    
        public virtual ObjectResult<usp_GetActivities_Result> usp_GetActivities(string countryCodeIso, Nullable<System.DateTime> currentDate)
        {
            var countryCodeIsoParameter = countryCodeIso != null ?
                new ObjectParameter("CountryCodeIso", countryCodeIso) :
                new ObjectParameter("CountryCodeIso", typeof(string));
    
            var currentDateParameter = currentDate.HasValue ?
                new ObjectParameter("CurrentDate", currentDate) :
                new ObjectParameter("CurrentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetActivities_Result>("usp_GetActivities", countryCodeIsoParameter, currentDateParameter);
        }
    }
}
